#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ ComfyUI API –Ω–∞ –ø–æ—Ä—Ç—É 8000
"""
import requests
import json
import time

def test_comfyui_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ ComfyUI API"""
    base_url = "http://127.0.0.1:8000"
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ComfyUI API –Ω–∞ –ø–æ—Ä—Ç—É 8000...")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    try:
        response = requests.get(f"{base_url}/system_stats", timeout=5)
        if response.status_code == 200:
            print("‚úÖ ComfyUI API –¥–æ—Å—Ç—É–ø–µ–Ω!")
            stats = response.json()
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ ComfyUI: {e}")
        return False
    
    return True

def test_arena_workflow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–ø—É—Å–∫ ArenaAutoCacheSmart workflow"""
    base_url = "http://127.0.0.1:8000"
    
    # Workflow —Å ArenaAutoCacheSmart v2.4
    workflow = {
        "1": {
            "inputs": {
                "workflow_source": "auto",
                "auto_cache": True,
                "show_analysis": True,
                "categories": "checkpoints,loras,controlnet,upscale_models"
            },
            "class_type": "ArenaAutoCacheSmart v2.4",
            "_meta": {
                "title": "Arena AutoCache: Smart v2.4"
            }
        }
    }
    
    print("\nüöÄ –ó–∞–ø—É—Å–∫ ArenaAutoCacheSmart v2.4 workflow...")
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º workflow –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
        response = requests.post(
            f"{base_url}/prompt",
            json={"prompt": workflow},
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            prompt_id = result.get("prompt_id")
            print(f"‚úÖ Workflow –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! ID: {prompt_id}")
            
            # –ñ–¥–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è...")
            time.sleep(2)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            status_response = requests.get(f"{base_url}/history/{prompt_id}")
            if status_response.status_code == 200:
                history = status_response.json()
                print(f"üìã –ò—Å—Ç–æ—Ä–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {json.dumps(history, indent=2)}")
                return True
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é. –°—Ç–∞—Ç—É—Å: {status_response.status_code}")
                return False
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ workflow. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ workflow: {e}")
        return False

def test_queue_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –æ—á–µ—Ä–µ–¥–∏ ComfyUI"""
    base_url = "http://127.0.0.1:8000"
    
    try:
        response = requests.get(f"{base_url}/queue", timeout=5)
        if response.status_code == 200:
            queue_data = response.json()
            print(f"üìã –û—á–µ—Ä–µ–¥—å: {json.dumps(queue_data, indent=2)}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—á–µ—Ä–µ–¥–∏: {e}")
        return False

if __name__ == "__main__":
    print("=" * 60)
    print("üîß –¢–ï–°–¢ –ü–†–Ø–ú–û–ì–û –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö COMFYUI API")
    print("=" * 60)
    
    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    if test_comfyui_api():
        print("\n" + "-" * 40)
        
        # –¢–µ—Å—Ç –æ—á–µ—Ä–µ–¥–∏
        print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–µ—Ä–µ–¥–∏:")
        test_queue_status()
        
        print("\n" + "-" * 40)
        
        # –¢–µ—Å—Ç ArenaAutoCacheSmart
        if test_arena_workflow():
            print("\nüéâ ArenaAutoCacheSmart v2.4 —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω!")
        else:
            print("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ ArenaAutoCacheSmart")
    else:
        print("\n‚ùå ComfyUI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ComfyUI –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000")
    
    print("\n" + "=" * 60)
    print("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
