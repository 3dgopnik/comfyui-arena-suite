# Pre-commit hooks configuration for ComfyUI Arena Suite
# Install with: pre-commit install
# Run with: pre-commit run --all-files

repos:
  # Basic hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^docs/.*\.md$
      - id: end-of-file-fixer
        exclude: ^docs/.*\.md$
      - id: check-yaml
        args: [--unsafe]  # Allow custom YAML tags
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: debug-statements
      - id: detect-private-key
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: requirements-txt-fixer

  # Ruff (fast Python linter and formatter)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.6
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        types_or: [python, pyi]
      - id: ruff-format
        types_or: [python, pyi]

  # MyPy (static type checker)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        additional_dependencies: [
          types-requests,
          types-PyYAML,
          types-toml,
        ]
        args: [--strict, --ignore-missing-imports]
        exclude: ^(tests/|docs/)

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, ., -f, json, -o, bandit-report.json]
        exclude: ^(tests/|docs/)

  # Documentation
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        exclude: ^(tests/|docs/)

  # Commit message format
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen

# Configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false

# Global excludes
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: '3.0.0'

# Custom configuration
exclude: |
  (?x)^(
    \.git/|
    \.venv/|
    venv/|
    __pycache__/|
    \.mypy_cache/|
    \.pytest_cache/|
    \.ruff_cache/|
    docs/.*\.md$|
    .*\.min\.js$|
    .*\.min\.css$
  )$
